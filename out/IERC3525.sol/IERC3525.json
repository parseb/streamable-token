{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "ApprovalValue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_oldSlot",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_newSlot",
          "type": "uint256"
        }
      ],
      "name": "SlotChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferValue",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "slotOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "valueDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(uint256,address)": "e345e0bc",
    "approve(address,uint256)": "095ea7b3",
    "approve(uint256,address,uint256)": "8cb0a511",
    "balanceOf(address)": "70a08231",
    "balanceOf(uint256)": "9cc7f708",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "slotOf(uint256)": "263f3e7e",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferFrom(uint256,address,uint256)": "0f485c02",
    "transferFrom(uint256,uint256,uint256)": "310ed7f0",
    "valueDecimals()": "3e7e8669"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ApprovalValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_oldSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_newSlot\",\"type\":\"uint256\"}],\"name\":\"SlotChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferValue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"slotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-3525 Note: the ERC-165 identifier for this interface is 0xc97ae3d5.\",\"events\":{\"ApprovalValue(uint256,address,uint256)\":{\"details\":\"MUST emits when the approval value of a token is set or changed.\",\"params\":{\"_operator\":\"The operator to approve for\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value that `_operator` is allowed to manage\"}},\"SlotChanged(uint256,uint256,uint256)\":{\"details\":\"MUST emit when the slot of a token is set or changed.\",\"params\":{\"_newSlot\":\"The updated slot of the token\",\"_oldSlot\":\"The previous slot of the token\",\"_tokenId\":\"The token of which slot is set or changed\"}},\"TransferValue(uint256,uint256,uint256)\":{\"details\":\"MUST emit when value of a token is transferred to another token with the same slot,  including zero value transfers (_value == 0) as well as transfers when tokens are created  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\",\"params\":{\"_fromTokenId\":\"The token id to transfer value from\",\"_toTokenId\":\"The token id to transfer value to\",\"_value\":\"The transferred value\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(uint256,address)\":{\"params\":{\"_operator\":\"The address of an operator\",\"_tokenId\":\"The token for which to query the allowance\"},\"returns\":{\"_0\":\"The current approval value of `_tokenId` that `_operator` is allowed to manage\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"approve(uint256,address,uint256)\":{\"details\":\"MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.\",\"params\":{\"_operator\":\"The operator to be approved\",\"_tokenId\":\"The token to approve\",\"_value\":\"The maximum value of `_toTokenId` that `_operator` is allowed to manage\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"balanceOf(uint256)\":{\"params\":{\"_tokenId\":\"The token for which to query the balance\"},\"returns\":{\"_0\":\"The value of `_tokenId`\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"slotOf(uint256)\":{\"params\":{\"_tokenId\":\"The identifier for a token\"},\"returns\":{\"_0\":\"The slot of the token\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferFrom(uint256,address,uint256)\":{\"details\":\"This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_to\":\"The address to transfer value to\",\"_value\":\"The transferred value\"},\"returns\":{\"_0\":\"ID of the new token created for `_to` which receives the transferred value\"}},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.\",\"params\":{\"_fromTokenId\":\"The token to transfer value from\",\"_toTokenId\":\"The token to transfer value to\",\"_value\":\"The transferred value\"}},\"valueDecimals()\":{\"returns\":{\"_0\":\"The number of decimals for value\"}}},\"title\":\"ERC-3525 Semi-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(uint256,address)\":{\"notice\":\"Get the maximum value of a token that an operator is allowed to manage.\"},\"approve(uint256,address,uint256)\":{\"notice\":\"Allow an operator to manage the value of a token, up to the `_value` amount.\"},\"balanceOf(uint256)\":{\"notice\":\"Get the value of a token.\"},\"slotOf(uint256)\":{\"notice\":\"Get the slot of a token.\"},\"transferFrom(uint256,address,uint256)\":{\"notice\":\"Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens.\"},\"transferFrom(uint256,uint256,uint256)\":{\"notice\":\"Transfer value from a specified token to another specified token with the same slot.\"},\"valueDecimals()\":{\"notice\":\"Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/needed/IERC3525.sol\":\"IERC3525\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda\",\"dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/needed/IERC3525.sol\":{\"keccak256\":\"0xec3d3bfaae7afc22c0b7394ec7995a1e6692b0ffd6dbfcd2545a61ee5c924a8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4caf4d7bc7e1138f161b6a06c4a0a5a3067ab93e6f3020738c7fa739f296a9b1\",\"dweb:/ipfs/QmZV7BsCQ5dTpwRBiSc5xQFoGEs6eFVywfFjvijAohd1gK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalValue",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_oldSlot",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_newSlot",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SlotChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferValue",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "slotOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "valueDecimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(uint256,address)": {
            "params": {
              "_operator": "The address of an operator",
              "_tokenId": "The token for which to query the allowance"
            },
            "returns": {
              "_0": "The current approval value of `_tokenId` that `_operator` is allowed to manage"
            }
          },
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "approve(uint256,address,uint256)": {
            "details": "MUST revert unless caller is the current owner, an authorized operator, or the approved  address for `_tokenId`.  MUST emit ApprovalValue event.",
            "params": {
              "_operator": "The operator to be approved",
              "_tokenId": "The token to approve",
              "_value": "The maximum value of `_toTokenId` that `_operator` is allowed to manage"
            }
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "balanceOf(uint256)": {
            "params": {
              "_tokenId": "The token for which to query the balance"
            },
            "returns": {
              "_0": "The value of `_tokenId`"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "slotOf(uint256)": {
            "params": {
              "_tokenId": "The identifier for a token"
            },
            "returns": {
              "_0": "The slot of the token"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "transferFrom(uint256,address,uint256)": {
            "details": "This function MUST create a new ERC3525 token with the same slot for `_to` to receive  the transferred value.  MUST revert if `_fromTokenId` is zero token id or does not exist.  MUST revert if `_to` is zero address.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `Transfer` and `TransferValue` events.",
            "params": {
              "_fromTokenId": "The token to transfer value from",
              "_to": "The address to transfer value to",
              "_value": "The transferred value"
            },
            "returns": {
              "_0": "ID of the new token created for `_to` which receives the transferred value"
            }
          },
          "transferFrom(uint256,uint256,uint256)": {
            "details": "Caller MUST be the current owner, an authorized operator or an operator who has been  approved the whole `_fromTokenId` or part of it.  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the  operator.  MUST emit `TransferValue` event.",
            "params": {
              "_fromTokenId": "The token to transfer value from",
              "_toTokenId": "The token to transfer value to",
              "_value": "The transferred value"
            }
          },
          "valueDecimals()": {
            "returns": {
              "_0": "The number of decimals for value"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowance(uint256,address)": {
            "notice": "Get the maximum value of a token that an operator is allowed to manage."
          },
          "approve(uint256,address,uint256)": {
            "notice": "Allow an operator to manage the value of a token, up to the `_value` amount."
          },
          "balanceOf(uint256)": {
            "notice": "Get the value of a token."
          },
          "slotOf(uint256)": {
            "notice": "Get the slot of a token."
          },
          "transferFrom(uint256,address,uint256)": {
            "notice": "Transfer value from a specified token to an address. The caller should confirm that  `_to` is capable of receiving ERC3525 tokens."
          },
          "transferFrom(uint256,uint256,uint256)": {
            "notice": "Transfer value from a specified token to another specified token with the same slot."
          },
          "valueDecimals()": {
            "notice": "Get the number of decimals the token uses for value - e.g. 6, means the user  representation of the value of a token can be calculated by dividing it by 1,000,000.  Considering the compatibility with third-party wallets, this function is defined as  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/needed/IERC3525.sol": "IERC3525"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb",
        "urls": [
          "bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda",
          "dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/needed/IERC3525.sol": {
        "keccak256": "0xec3d3bfaae7afc22c0b7394ec7995a1e6692b0ffd6dbfcd2545a61ee5c924a8e",
        "urls": [
          "bzz-raw://4caf4d7bc7e1138f161b6a06c4a0a5a3067ab93e6f3020738c7fa739f296a9b1",
          "dweb:/ipfs/QmZV7BsCQ5dTpwRBiSc5xQFoGEs6eFVywfFjvijAohd1gK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/needed/IERC3525.sol",
    "id": 26661,
    "exportedSymbols": {
      "IERC165": [
        23923
      ],
      "IERC3525": [
        26660
      ],
      "IERC721": [
        23342
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:5328:17",
    "nodes": [
      {
        "id": 26561,
        "nodeType": "PragmaDirective",
        "src": "33:23:17",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 26562,
        "nodeType": "ImportDirective",
        "src": "58:57:17",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "openzeppelin-contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26661,
        "sourceUnit": 23343,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26563,
        "nodeType": "ImportDirective",
        "src": "116:64:17",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "file": "openzeppelin-contracts/utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26661,
        "sourceUnit": 23924,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26660,
        "nodeType": "ContractDefinition",
        "src": "356:5004:17",
        "nodes": [
          {
            "id": 26577,
            "nodeType": "EventDefinition",
            "src": "840:94:17",
            "anonymous": false,
            "documentation": {
              "id": 26569,
              "nodeType": "StructuredDocumentation",
              "src": "401:434:17",
              "text": " @dev MUST emit when value of a token is transferred to another token with the same slot,\n  including zero value transfers (_value == 0) as well as transfers when tokens are created\n  (`_fromTokenId` == 0) or destroyed (`_toTokenId` == 0).\n @param _fromTokenId The token id to transfer value from\n @param _toTokenId The token id to transfer value to\n @param _value The transferred value"
            },
            "eventSelector": "0b2aac84f3ec956911fd78eae5311062972ff949f38412e8da39069d9f068cc6",
            "name": "TransferValue",
            "nameLocation": "846:13:17",
            "parameters": {
              "id": 26576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26571,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_fromTokenId",
                  "nameLocation": "876:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26577,
                  "src": "860:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26573,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_toTokenId",
                  "nameLocation": "906:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26577,
                  "src": "890:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "926:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26577,
                  "src": "918:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:74:17"
            }
          },
          {
            "id": 26586,
            "nodeType": "EventDefinition",
            "src": "1206:89:17",
            "anonymous": false,
            "documentation": {
              "id": 26578,
              "nodeType": "StructuredDocumentation",
              "src": "940:261:17",
              "text": " @dev MUST emits when the approval value of a token is set or changed.\n @param _tokenId The token to approve\n @param _operator The operator to approve for\n @param _value The maximum value that `_operator` is allowed to manage"
            },
            "eventSelector": "621b050de0ad08b51d19b48b3e6df75348c4de6bdd93e81b252ca62e28265b1b",
            "name": "ApprovalValue",
            "nameLocation": "1212:13:17",
            "parameters": {
              "id": 26585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26580,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1242:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26586,
                  "src": "1226:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26582,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1268:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26586,
                  "src": "1252:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1287:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26586,
                  "src": "1279:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1225:69:17"
            }
          },
          {
            "id": 26595,
            "nodeType": "EventDefinition",
            "src": "1555:96:17",
            "anonymous": false,
            "documentation": {
              "id": 26587,
              "nodeType": "StructuredDocumentation",
              "src": "1301:249:17",
              "text": " @dev MUST emit when the slot of a token is set or changed.\n @param _tokenId The token of which slot is set or changed\n @param _oldSlot The previous slot of the token\n @param _newSlot The updated slot of the token"
            },
            "eventSelector": "e4f48c240d3b994948aa54f3e2f5fca59263dfe1d52b6e4cf39a5d249b5ccb65",
            "name": "SlotChanged",
            "nameLocation": "1561:11:17",
            "parameters": {
              "id": 26594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26589,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1589:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26595,
                  "src": "1573:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26591,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_oldSlot",
                  "nameLocation": "1615:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26595,
                  "src": "1599:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26593,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_newSlot",
                  "nameLocation": "1641:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26595,
                  "src": "1625:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1572:78:17"
            }
          },
          {
            "id": 26601,
            "nodeType": "FunctionDefinition",
            "src": "2086:55:17",
            "documentation": {
              "id": 26596,
              "nodeType": "StructuredDocumentation",
              "src": "1657:424:17",
              "text": " @notice Get the number of decimals the token uses for value - e.g. 6, means the user\n  representation of the value of a token can be calculated by dividing it by 1,000,000.\n  Considering the compatibility with third-party wallets, this function is defined as\n  `valueDecimals()` instead of `decimals()` to avoid conflict with ERC20 tokens.\n @return The number of decimals for value"
            },
            "functionSelector": "3e7e8669",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "valueDecimals",
            "nameLocation": "2095:13:17",
            "parameters": {
              "id": 26597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2108:2:17"
            },
            "returnParameters": {
              "id": 26600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26601,
                  "src": "2134:5:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 26598,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:7:17"
            },
            "scope": 26660,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26609,
            "nodeType": "FunctionDefinition",
            "src": "2307:69:17",
            "documentation": {
              "id": 26602,
              "nodeType": "StructuredDocumentation",
              "src": "2147:155:17",
              "text": " @notice Get the value of a token.\n @param _tokenId The token for which to query the balance\n @return The value of `_tokenId`"
            },
            "functionSelector": "9cc7f708",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2316:9:17",
            "parameters": {
              "id": 26605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26604,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2334:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26609,
                  "src": "2326:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2325:18:17"
            },
            "returnParameters": {
              "id": 26608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26609,
                  "src": "2367:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2366:9:17"
            },
            "scope": 26660,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26617,
            "nodeType": "FunctionDefinition",
            "src": "2525:66:17",
            "documentation": {
              "id": 26610,
              "nodeType": "StructuredDocumentation",
              "src": "2382:138:17",
              "text": " @notice Get the slot of a token.\n @param _tokenId The identifier for a token\n @return The slot of the token"
            },
            "functionSelector": "263f3e7e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "slotOf",
            "nameLocation": "2534:6:17",
            "parameters": {
              "id": 26613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26612,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2549:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26617,
                  "src": "2541:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2540:18:17"
            },
            "returnParameters": {
              "id": 26616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26615,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26617,
                  "src": "2582:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2581:9:17"
            },
            "scope": 26660,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26627,
            "nodeType": "FunctionDefinition",
            "src": "3065:87:17",
            "documentation": {
              "id": 26618,
              "nodeType": "StructuredDocumentation",
              "src": "2597:463:17",
              "text": " @notice Allow an operator to manage the value of a token, up to the `_value` amount.\n @dev MUST revert unless caller is the current owner, an authorized operator, or the approved\n  address for `_tokenId`.\n  MUST emit ApprovalValue event.\n @param _tokenId The token to approve\n @param _operator The operator to be approved\n @param _value The maximum value of `_toTokenId` that `_operator` is allowed to manage"
            },
            "functionSelector": "8cb0a511",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3074:7:17",
            "parameters": {
              "id": 26625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26620,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3090:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26627,
                  "src": "3082:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26622,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "3108:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26627,
                  "src": "3100:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3100:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26624,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3127:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26627,
                  "src": "3119:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3081:53:17"
            },
            "returnParameters": {
              "id": 26626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3151:0:17"
            },
            "scope": 26660,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26637,
            "nodeType": "FunctionDefinition",
            "src": "3472:88:17",
            "documentation": {
              "id": 26628,
              "nodeType": "StructuredDocumentation",
              "src": "3158:309:17",
              "text": " @notice Get the maximum value of a token that an operator is allowed to manage.\n @param _tokenId The token for which to query the allowance\n @param _operator The address of an operator\n @return The current approval value of `_tokenId` that `_operator` is allowed to manage"
            },
            "functionSelector": "e345e0bc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3481:9:17",
            "parameters": {
              "id": 26633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26630,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3499:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26637,
                  "src": "3491:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26632,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "3517:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26637,
                  "src": "3509:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3509:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3490:37:17"
            },
            "returnParameters": {
              "id": 26636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26637,
                  "src": "3551:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3550:9:17"
            },
            "scope": 26660,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26647,
            "nodeType": "FunctionDefinition",
            "src": "4316:97:17",
            "documentation": {
              "id": 26638,
              "nodeType": "StructuredDocumentation",
              "src": "3566:745:17",
              "text": " @notice Transfer value from a specified token to another specified token with the same slot.\n @dev Caller MUST be the current owner, an authorized operator or an operator who has been\n  approved the whole `_fromTokenId` or part of it.\n  MUST revert if `_fromTokenId` or `_toTokenId` is zero token id or does not exist.\n  MUST revert if slots of `_fromTokenId` and `_toTokenId` do not match.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `TransferValue` event.\n @param _fromTokenId The token to transfer value from\n @param _toTokenId The token to transfer value to\n @param _value The transferred value"
            },
            "functionSelector": "310ed7f0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4325:12:17",
            "parameters": {
              "id": 26645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26640,
                  "mutability": "mutable",
                  "name": "_fromTokenId",
                  "nameLocation": "4346:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26647,
                  "src": "4338:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4338:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26642,
                  "mutability": "mutable",
                  "name": "_toTokenId",
                  "nameLocation": "4368:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26647,
                  "src": "4360:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4360:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26644,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "4388:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26647,
                  "src": "4380:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4380:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4337:58:17"
            },
            "returnParameters": {
              "id": 26646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4412:0:17"
            },
            "scope": 26660,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26659,
            "nodeType": "FunctionDefinition",
            "src": "5250:108:17",
            "documentation": {
              "id": 26648,
              "nodeType": "StructuredDocumentation",
              "src": "4419:826:17",
              "text": " @notice Transfer value from a specified token to an address. The caller should confirm that\n  `_to` is capable of receiving ERC3525 tokens.\n @dev This function MUST create a new ERC3525 token with the same slot for `_to` to receive\n  the transferred value.\n  MUST revert if `_fromTokenId` is zero token id or does not exist.\n  MUST revert if `_to` is zero address.\n  MUST revert if `_value` exceeds the balance of `_fromTokenId` or its allowance to the\n  operator.\n  MUST emit `Transfer` and `TransferValue` events.\n @param _fromTokenId The token to transfer value from\n @param _to The address to transfer value to\n @param _value The transferred value\n @return ID of the new token created for `_to` which receives the transferred value"
            },
            "functionSelector": "0f485c02",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5259:12:17",
            "parameters": {
              "id": 26655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26650,
                  "mutability": "mutable",
                  "name": "_fromTokenId",
                  "nameLocation": "5280:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26659,
                  "src": "5272:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26652,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5302:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26659,
                  "src": "5294:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5294:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26654,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5315:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26659,
                  "src": "5307:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5271:51:17"
            },
            "returnParameters": {
              "id": 26658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26659,
                  "src": "5349:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5348:9:17"
            },
            "scope": 26660,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26565,
              "name": "IERC165",
              "nameLocations": [
                "378:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23923,
              "src": "378:7:17"
            },
            "id": 26566,
            "nodeType": "InheritanceSpecifier",
            "src": "378:7:17"
          },
          {
            "baseName": {
              "id": 26567,
              "name": "IERC721",
              "nameLocations": [
                "387:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23342,
              "src": "387:7:17"
            },
            "id": 26568,
            "nodeType": "InheritanceSpecifier",
            "src": "387:7:17"
          }
        ],
        "canonicalName": "IERC3525",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 26564,
          "nodeType": "StructuredDocumentation",
          "src": "182:173:17",
          "text": " @title ERC-3525 Semi-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-3525\n Note: the ERC-165 identifier for this interface is 0xc97ae3d5."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          26660,
          23342,
          23923
        ],
        "name": "IERC3525",
        "nameLocation": "366:8:17",
        "scope": 26661,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 17
}